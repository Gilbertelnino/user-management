{
  "swagger": "2.0",
  "info": {
    "title": "User management system",
    "description": "User management system",
    "version": "1.0.0",
    "contact": {
      "name": "Developer",
      "email": "gilbeltelnino@gmail.com"
    }
  },
  "host": "user-management12.herokuapp.com",
  "basePath": "/api",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "AuthToken": {
      "type": "apiKey",
      "name": "auth-token",
      "in": "header",
      "description": "The token for authentication"
    }
  },
  "security": [
    {
      "AuthToken": []
    }
  ],

  "paths": {
    "/user/all": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "getAllUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by id",
        "description": "Get a user by id",
        "operationId": "getUserById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": ["User"],
        "summary": "Get a loggedin user profile",
        "description": "Loggedin user get his or her owner profile data",
        "operationId": "getUserProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user",
        "description": "Register a new user",
        "operationId": "registerUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data Needed to Register Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Confirmation link sent",

            "400": {
              "description": "One or more Fields are missing"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "AuthToken": []
            }
          ]
        }
      }
    },
    "/user/verify/signup": {
      "get": {
        "tags": ["User"],
        "summary": "Verify a user",
        "description": "Verify a user",
        "operationId": "verifyUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Token that was sent to the registered user email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserVerify"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You are verified successfully"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "AuthToken": []
          }
        ]
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login a user",
        "description": "Login a user",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Data needed to login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You are logged in successfully"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "401": {
            "description": "Invalid Email or password"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "AuthToken": []
          }
        ]
      }
    },
    "/user/logout": {
      "delete": {
        "tags": ["User"],
        "summary": "Logout a user",
        "description": "Logout a user",
        "operationId": "logoutUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "You are logged out successfully"
          },
          "400": {
            "description": "Already logged out"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": ["User"],
        "summary": "Send a password reset email",
        "description": "Send a password reset email",
        "operationId": "sendPasswordResetEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Data needed to send password reset email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserForgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset email sent successfully"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/reset-password/{token}/{email}": {
      "patch": {
        "tags": ["User"],
        "summary": "Reset a user password",
        "description": "Reset a user password",
        "operationId": "resetUserPassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Password reset token",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "path",
            "description": "User email",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User Data needed to reset password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User password reset successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/document/add": {
      "post": {
        "tags": ["User"],
        "summary": "Add a document to a user",
        "description": "Add a document to a user",
        "operationId": "addUserDocument",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Data needed to add document",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document added successfully"
          },
          "400": {
            "description": "One or more Fields are missing"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "AuthToken": []
          }
        ]
      }
    },
    "/user/document/all": {
      "get": {
        "tags": ["User"],
        "summary": "Get all documents of a user",
        "description": "Get all documents of a user",
        "operationId": "getUserDocuments",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All documents of a user"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "AuthToken": []
          }
        ]
      }
    },
    "/user/{userId}/document/{documentId}/verify": {
      "patch": {
        "tags": ["User"],
        "summary": "Verify a document of a user",
        "description": "Verify a document of a user",
        "operationId": "verifyUserDocument",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Document verified successfully"
          },
          "403": {
            "description": "Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "AuthToken": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "birthDate": {
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserVerify": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "UserDocument": {
      "type": "object",
      "properties": {
        "IDNumber": {
          "type": "string"
        },
        "doc": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    }
  }
}
